@using ECommerceWeb.Common
@model ECommerceWeb.Models.Shop.ProductViewModel

@{
    ViewBag.Title = "Product View";
}

@if (TempData["alert-success"] != null)
{
    <div class="alert alert-success" style="margin-top: 20px">
        <ul>
            <li>@TempData["alert-success"]</li>
        </ul>
    </div>
}
else if (TempData["alert-fail"] != null)
{
    <div class="alert alert-danger" style="margin-top: 20px">
        <ul>
            <li>@TempData["alert-fail"]</li>
        </ul>
    </div>
}

<div>
    <h2>@Html.DisplayFor(model => model.Name)</h2>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Func.Currencyfy(Model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImageSrc)
        </dt>

        <dd>
            <img src="@Url.Content(Model.ImageSrc)" alt="Image" style="height: 200px;" />
        </dd>

        <dt></dt>

        <dd style="margin-top: 40px">
            
            @using (Html.BeginForm(Constants.ACTION_ADD, Constants.CONTROLLER_CART, new { @ProductID = Model.ID, @Quantity = Model.Quantity }, FormMethod.Post))
            {
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", style = "display: unset; width: 7%;", @min = "1" } })
                <input type="submit" value="Add to Cart" class="btn btn-primary" />
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            }

        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Back to List", Constants.ACTION_INDEX, Constants.CONTROLLER_SHOP)
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
