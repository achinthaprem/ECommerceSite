@using ECommerceWeb.Common
@model ECommerceWeb.Models.Category.EditCategoryViewModel

@{
    ViewBag.Title = "Edit Category";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm(Constants.ACTION_EDIT, Constants.CONTROLLER_CATEGORY, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit existing Category.</h4>
        <hr />

        @if (ViewBag.MessageSuccess != null)
        {
            <div class="alert alert-success">
                <ul>
                    <li>@ViewBag.MessageSuccess</li>
                </ul>
            </div>
        }
        else if (ViewBag.MessageError != null)
        {
            <div class="alert alert-danger">
                <ul>
                    <li>@ViewBag.MessageError</li>
                </ul>
            </div>
        }
        else
        {
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "height: 200px;" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.ImageSrc)

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img id="image_preview" style="height: 200px;" src="@Url.Content(Model.ImageSrc)" alt="Image" />
                    @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" }, type = "file", id = "image_upload", accept = ".png,.jpg", style = "padding-top: 4px;" })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin-top: 2px;" })
                <div class="col-md-10">
                    <div class="checkbox" style="padding-top: 0px;">
                        <label class="switch switch_type1" role="switch">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "switch__toggle", @id = "status-checkbox" } })
                            <span class="switch__label"></span>
                        </label>
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index") @{ /* TODO: fix the back to list link here */ }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
