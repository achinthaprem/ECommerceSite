@using ECommerceWeb.Common
@model ECommerceWeb.Models.Category.CategoryViewModel

@{
    ViewBag.Title = Model.IsEditMode ? "Edit Category" : "Add Category";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(Constants.ACTION_EDITOR, Constants.CONTROLLER_CATEGORY, FormMethod.Post, new { id = "categoryEditorForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

       @if (Model.IsEditMode)
        {
            <h4>Edit existing Category.</h4>
        }
        else
        {
            <h4>Add new Category.</h4>
        }
        <hr />

        @if (ViewContext.ViewData.ModelState.ContainsKey(string.Empty))
        {
            Html.ValidationSummary(true, "", new { @class = "alert alert-danger" });
        }

        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "height: 200px;" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="image_preview" style="height: 200px;" src="@Url.Content(Model.GetImageSrc())" alt="Image" />
                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" }, type = "file", id = "image_upload_category", accept = ".png,.jpg", style = "padding-top: 4px;" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" style="padding-top: 0px;">
                    <label class="switch switch_type1" role="switch">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "switch__toggle", @id = "status-checkbox" } })
                        <span class="switch__label"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit_category" type="button" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", Constants.ACTION_LIST, Constants.CONTROLLER_CATEGORY)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
