//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECommerceWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ShippingInfo> ShippingInfoes { get; set; }
    
        public virtual int AccountDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountDelete", iDParameter);
        }
    
        public virtual int AccountGetByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountGetByEmail", emailParameter);
        }
    
        public virtual int AccountGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AccountInsert(string first_name, string last_name, string email, string password, string salt, string contact_no, string shipping_address, string country, Nullable<int> status, Nullable<int> role, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var shipping_addressParameter = shipping_address != null ?
                new ObjectParameter("shipping_address", shipping_address) :
                new ObjectParameter("shipping_address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AccountInsert", first_nameParameter, last_nameParameter, emailParameter, passwordParameter, saltParameter, contact_noParameter, shipping_addressParameter, countryParameter, statusParameter, roleParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual int AccountList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountList");
        }
    
        public virtual int AccountUpdate(Nullable<int> iD, string first_name, string last_name, string email, string password, string salt, string contact_no, string shipping_address, string country, Nullable<int> status, Nullable<int> role, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("salt", salt) :
                new ObjectParameter("salt", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var shipping_addressParameter = shipping_address != null ?
                new ObjectParameter("shipping_address", shipping_address) :
                new ObjectParameter("shipping_address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccountUpdate", iDParameter, first_nameParameter, last_nameParameter, emailParameter, passwordParameter, saltParameter, contact_noParameter, shipping_addressParameter, countryParameter, statusParameter, roleParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual int CategoryDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryDelete", iDParameter);
        }
    
        public virtual int CategoryGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CategoryInsert(string name, string description, string image_name, Nullable<int> status, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var image_nameParameter = image_name != null ?
                new ObjectParameter("image_name", image_name) :
                new ObjectParameter("image_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CategoryInsert", nameParameter, descriptionParameter, image_nameParameter, statusParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual int CategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryList");
        }
    
        public virtual int CategoryListByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryListByStatus", statusParameter);
        }
    
        public virtual int CategoryUpdate(Nullable<int> iD, string name, string description, string image_name, Nullable<int> status, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var image_nameParameter = image_name != null ?
                new ObjectParameter("image_name", image_name) :
                new ObjectParameter("image_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryUpdate", iDParameter, nameParameter, descriptionParameter, image_nameParameter, statusParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual ObjectResult<string> ConfigGetByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConfigGetByName", nameParameter);
        }
    
        public virtual int ConfigSetByName(string name, string value)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConfigSetByName", nameParameter, valueParameter);
        }
    
        public virtual int OrderDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderDelete", iDParameter);
        }
    
        public virtual int OrderGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OrderInsert(Nullable<int> account_id, Nullable<System.DateTime> date_created, Nullable<int> status, Nullable<int> payment_method, Nullable<decimal> total_amount)
        {
            var account_idParameter = account_id.HasValue ?
                new ObjectParameter("account_id", account_id) :
                new ObjectParameter("account_id", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var payment_methodParameter = payment_method.HasValue ?
                new ObjectParameter("payment_method", payment_method) :
                new ObjectParameter("payment_method", typeof(int));
    
            var total_amountParameter = total_amount.HasValue ?
                new ObjectParameter("total_amount", total_amount) :
                new ObjectParameter("total_amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OrderInsert", account_idParameter, date_createdParameter, statusParameter, payment_methodParameter, total_amountParameter);
        }
    
        public virtual int OrderItemDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItemDelete", iDParameter);
        }
    
        public virtual int OrderItemGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItemGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> OrderItemInsert(Nullable<int> order_id, Nullable<int> product_id, Nullable<int> quantity, Nullable<decimal> unit_cost, Nullable<decimal> subtotal)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var unit_costParameter = unit_cost.HasValue ?
                new ObjectParameter("unit_cost", unit_cost) :
                new ObjectParameter("unit_cost", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("OrderItemInsert", order_idParameter, product_idParameter, quantityParameter, unit_costParameter, subtotalParameter);
        }
    
        public virtual int OrderItemList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItemList");
        }
    
        public virtual int OrderItemListByOrderID(Nullable<int> order_id)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItemListByOrderID", order_idParameter);
        }
    
        public virtual int OrderItemUpdate(Nullable<int> iD, Nullable<int> order_id, Nullable<int> product_id, Nullable<int> quantity, Nullable<decimal> unit_cost, Nullable<decimal> subtotal)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var unit_costParameter = unit_cost.HasValue ?
                new ObjectParameter("unit_cost", unit_cost) :
                new ObjectParameter("unit_cost", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItemUpdate", iDParameter, order_idParameter, product_idParameter, quantityParameter, unit_costParameter, subtotalParameter);
        }
    
        public virtual int OrderList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderList");
        }
    
        public virtual int OrderListByAccountID(Nullable<int> account_id)
        {
            var account_idParameter = account_id.HasValue ?
                new ObjectParameter("account_id", account_id) :
                new ObjectParameter("account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderListByAccountID", account_idParameter);
        }
    
        public virtual int OrderListByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderListByStatus", statusParameter);
        }
    
        public virtual int OrderUpdate(Nullable<int> iD, Nullable<int> account_id, Nullable<System.DateTime> date_created, Nullable<int> status, Nullable<int> payment_method, Nullable<decimal> total_amount)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var account_idParameter = account_id.HasValue ?
                new ObjectParameter("account_id", account_id) :
                new ObjectParameter("account_id", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var payment_methodParameter = payment_method.HasValue ?
                new ObjectParameter("payment_method", payment_method) :
                new ObjectParameter("payment_method", typeof(int));
    
            var total_amountParameter = total_amount.HasValue ?
                new ObjectParameter("total_amount", total_amount) :
                new ObjectParameter("total_amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderUpdate", iDParameter, account_idParameter, date_createdParameter, statusParameter, payment_methodParameter, total_amountParameter);
        }
    
        public virtual int ProductDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductDelete", iDParameter);
        }
    
        public virtual int ProductGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProductInsert(Nullable<int> category_id, string name, string description, Nullable<decimal> price, string image_name, Nullable<int> status, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var image_nameParameter = image_name != null ?
                new ObjectParameter("image_name", image_name) :
                new ObjectParameter("image_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProductInsert", category_idParameter, nameParameter, descriptionParameter, priceParameter, image_nameParameter, statusParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual int ProductList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductList");
        }
    
        public virtual int ProductListByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductListByStatus", statusParameter);
        }
    
        public virtual int ProductUpdate(Nullable<int> iD, Nullable<int> category_id, string name, string description, Nullable<decimal> price, string image_name, Nullable<int> status, Nullable<System.DateTime> date_created, Nullable<System.DateTime> date_modified, Nullable<int> created_account_id, Nullable<int> modified_account_id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var image_nameParameter = image_name != null ?
                new ObjectParameter("image_name", image_name) :
                new ObjectParameter("image_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var date_createdParameter = date_created.HasValue ?
                new ObjectParameter("date_created", date_created) :
                new ObjectParameter("date_created", typeof(System.DateTime));
    
            var date_modifiedParameter = date_modified.HasValue ?
                new ObjectParameter("date_modified", date_modified) :
                new ObjectParameter("date_modified", typeof(System.DateTime));
    
            var created_account_idParameter = created_account_id.HasValue ?
                new ObjectParameter("created_account_id", created_account_id) :
                new ObjectParameter("created_account_id", typeof(int));
    
            var modified_account_idParameter = modified_account_id.HasValue ?
                new ObjectParameter("modified_account_id", modified_account_id) :
                new ObjectParameter("modified_account_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductUpdate", iDParameter, category_idParameter, nameParameter, descriptionParameter, priceParameter, image_nameParameter, statusParameter, date_createdParameter, date_modifiedParameter, created_account_idParameter, modified_account_idParameter);
        }
    
        public virtual int ShippingInfoDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShippingInfoDelete", iDParameter);
        }
    
        public virtual int ShippingInfoGetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShippingInfoGetByID", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ShippingInfoInsert(Nullable<int> order_id, Nullable<int> type, Nullable<decimal> cost, string address)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ShippingInfoInsert", order_idParameter, typeParameter, costParameter, addressParameter);
        }
    
        public virtual int ShippingInfoList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShippingInfoList");
        }
    
        public virtual int ShippingInfoListByType(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShippingInfoListByType", typeParameter);
        }
    
        public virtual int ShippingInfoUpdate(Nullable<int> iD, Nullable<int> order_id, Nullable<int> type, Nullable<decimal> cost, string address)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShippingInfoUpdate", iDParameter, order_idParameter, typeParameter, costParameter, addressParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SystemLoggedInsert(Nullable<System.DateTime> date_logged, string url, Nullable<int> account_id, string class_name, string method_name, string description, Nullable<int> severity, string remote_address, string exceptiontype, string user_agent, string server_name, string developer_msg)
        {
            var date_loggedParameter = date_logged.HasValue ?
                new ObjectParameter("date_logged", date_logged) :
                new ObjectParameter("date_logged", typeof(System.DateTime));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var account_idParameter = account_id.HasValue ?
                new ObjectParameter("account_id", account_id) :
                new ObjectParameter("account_id", typeof(int));
    
            var class_nameParameter = class_name != null ?
                new ObjectParameter("class_name", class_name) :
                new ObjectParameter("class_name", typeof(string));
    
            var method_nameParameter = method_name != null ?
                new ObjectParameter("method_name", method_name) :
                new ObjectParameter("method_name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var severityParameter = severity.HasValue ?
                new ObjectParameter("severity", severity) :
                new ObjectParameter("severity", typeof(int));
    
            var remote_addressParameter = remote_address != null ?
                new ObjectParameter("remote_address", remote_address) :
                new ObjectParameter("remote_address", typeof(string));
    
            var exceptiontypeParameter = exceptiontype != null ?
                new ObjectParameter("exceptiontype", exceptiontype) :
                new ObjectParameter("exceptiontype", typeof(string));
    
            var user_agentParameter = user_agent != null ?
                new ObjectParameter("user_agent", user_agent) :
                new ObjectParameter("user_agent", typeof(string));
    
            var server_nameParameter = server_name != null ?
                new ObjectParameter("server_name", server_name) :
                new ObjectParameter("server_name", typeof(string));
    
            var developer_msgParameter = developer_msg != null ?
                new ObjectParameter("developer_msg", developer_msg) :
                new ObjectParameter("developer_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SystemLoggedInsert", date_loggedParameter, urlParameter, account_idParameter, class_nameParameter, method_nameParameter, descriptionParameter, severityParameter, remote_addressParameter, exceptiontypeParameter, user_agentParameter, server_nameParameter, developer_msgParameter);
        }
    }
}
